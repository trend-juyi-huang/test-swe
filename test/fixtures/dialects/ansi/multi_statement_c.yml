# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: e31020d6c4d5a1ab86c35fd365c20fb25ba3a38c3aadd4de9d318773a702e7bf
file:
- statement:
    select_statement:
      select_clause:
        keyword: select
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: boo
- statement_terminator: ;
- statement:
    with_compound_statement:
      keyword: WITH
      common_table_expression:
        identifier: blah
        keyword: AS
        bracketed:
          start_bracket: (
          select_statement:
            select_clause:
            - keyword: select
            - select_clause_element:
                column_reference:
                  identifier: x
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: y
            - comma: ','
            - select_clause_element:
                literal: '4.567'
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      identifier: foo
          end_bracket: )
      select_statement:
        select_clause:
        - keyword: select
        - select_clause_element:
            column_reference:
              identifier: z
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: y
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: x
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: blah
- statement_terminator: ;
