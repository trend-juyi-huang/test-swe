# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 5bcfa2f777d2a37d09a6ecc5387679a3764b0d9347d26a29e557be42ab526679
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: NTH_VALUE
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  identifier: bar
            - comma: ','
            - expression:
                literal: '1'
            - end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  identifier: w1
                end_bracket: )
          alias_expression:
            keyword: AS
            identifier: baz
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: NTH_VALUE
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  identifier: bar
            - comma: ','
            - expression:
                literal: '1'
            - end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                end_bracket: )
          alias_expression:
            keyword: AS
            identifier: foo
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: t
      named_window:
        keyword: WINDOW
        named_window_expression:
          identifier: w1
          keyword: AS
          bracketed:
            start_bracket: (
            window_specification:
              partitionby_clause:
              - keyword: PARTITION
              - keyword: BY
              - expression:
                  column_reference:
                    identifier: x
              - comma: ','
              - expression:
                  column_reference:
                    identifier: y
              - comma: ','
              - expression:
                  column_reference:
                    identifier: z
              orderby_clause:
              - keyword: ORDER
              - keyword: BY
              - column_reference:
                  identifier: abc
              - keyword: DESC
            end_bracket: )
