# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 26c4cfcd873e4af02a5f95df27034c6ae6c4722857dc7713b740d2c599250953
file:
  statement:
    with_compound_statement:
      keyword: WITH
      common_table_expression:
        identifier: mycte1
        keyword: AS
        bracketed:
          start_bracket: (
          select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  identifier: foo
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: bar
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: baz
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      identifier: mytable
          end_bracket: )
      insert_statement:
      - keyword: INSERT
      - keyword: INTO
      - table_reference:
          identifier: table2
      - bracketed:
        - start_bracket: (
        - column_reference:
            identifier: column1
        - comma: ','
        - column_reference:
            identifier: column2
        - comma: ','
        - column_reference:
            identifier: column3
        - end_bracket: )
      - with_compound_statement:
          keyword: WITH
          common_table_expression:
            identifier: mycte2
            keyword: AS
            bracketed:
              start_bracket: (
              select_statement:
                select_clause:
                - keyword: SELECT
                - select_clause_element:
                    column_reference:
                      identifier: foo
                - comma: ','
                - select_clause_element:
                    column_reference:
                      identifier: bar
                - comma: ','
                - select_clause_element:
                    column_reference:
                      identifier: baz
                from_clause:
                  keyword: FROM
                  from_expression:
                    from_expression_element:
                      table_expression:
                        table_reference:
                          identifier: mycte1
              end_bracket: )
          select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                column_reference:
                  identifier: foo
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: bar
            - comma: ','
            - select_clause_element:
                column_reference:
                  identifier: baz
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    table_reference:
                      identifier: mycte2
  statement_terminator: ;
