# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 17005657ac2d78f41aa5fd59b02ca74bf5dec1670f4dd5d97781bf774384a59a
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: my_tbl
          from_pivot_expression:
            keyword: PIVOT
            bracketed:
            - start_bracket: (
            - function:
                function_name:
                  function_name_identifier: min
                bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      identifier: f_val
                  end_bracket: )
            - keyword: FOR
            - identifier: f_id
            - keyword: IN
            - bracketed:
              - start_bracket: (
              - literal: '1'
              - comma: ','
              - literal: '2'
              - end_bracket: )
            - end_bracket: )
          table_alias_expression:
            alias_expression:
              keyword: AS
              identifier: f
              bracketed:
                start_bracket: (
                identifier_list:
                - identifier: a
                - comma: ','
                - identifier: b
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          wildcard_expression:
            wildcard_identifier:
              star: '*'
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: my_tbl
          from_unpivot_expression:
            keyword: UNPIVOT
            bracketed:
            - start_bracket: (
            - identifier: val
            - keyword: FOR
            - identifier: col_name
            - keyword: IN
            - bracketed:
              - start_bracket: (
              - identifier: a
              - comma: ','
              - identifier: b
              - end_bracket: )
            - end_bracket: )
- statement_terminator: ;
