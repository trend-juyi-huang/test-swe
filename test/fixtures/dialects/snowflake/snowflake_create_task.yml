# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: c0547cbe3217ed0bd46d8c7d11acce26d1a2adbfeabcb968657f9ec370317014
file:
- statement:
    create_task_statement:
    - keyword: CREATE
    - keyword: TASK
    - object_reference:
        identifier: t1
    - keyword: SCHEDULE
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: "'USING CRON 0 9-17 * * SUN America/Los_Angeles'"
    - parameter: TIMESTAMP_INPUT_FORMAT
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: "'YYYY-MM-DD HH24'"
    - keyword: USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE
    - comparison_operator:
        raw_comparison_operator: '='
    - warehouse_size: "'XSMALL'"
    - keyword: AS
    - statement:
        insert_statement:
        - keyword: INSERT
        - keyword: INTO
        - table_reference:
            identifier: mytable
        - bracketed:
            start_bracket: (
            column_reference:
              identifier: ts
            end_bracket: )
        - values_clause:
            keyword: VALUES
            bracketed:
              start_bracket: (
              expression:
                literal: '1'
              end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - keyword: TASK
    - object_reference:
        identifier: mytask_hour
    - keyword: WAREHOUSE
    - comparison_operator:
        raw_comparison_operator: '='
    - object_reference:
        identifier: mywh
    - keyword: SCHEDULE
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: "'USING CRON 0 9-17 * * SUN America/Los_Angeles'"
    - parameter: TIMESTAMP_INPUT_FORMAT
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: "'YYYY-MM-DD HH24'"
    - keyword: AS
    - statement:
        insert_statement:
        - keyword: INSERT
        - keyword: INTO
        - table_reference:
            identifier: mytable
        - bracketed:
            start_bracket: (
            column_reference:
              identifier: ts
            end_bracket: )
        - values_clause:
            keyword: VALUES
            bracketed:
            - start_bracket: (
            - expression:
                literal: '1'
            - comma: ','
            - expression:
                literal: '2'
            - comma: ','
            - expression:
                literal: '3'
            - end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: TASK
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - object_reference:
        identifier: t1
    - keyword: SCHEDULE
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: "'USING CRON 0 9-17 * * SUN America/Los_Angeles'"
    - keyword: ALLOW_OVERLAPPING_EXECUTION
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: 'TRUE'
    - parameter: TIMESTAMP_INPUT_FORMAT
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: "'YYYY-MM-DD HH24'"
    - parameter: USER_TASK_TIMEOUT_MS
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: '25'
    - keyword: USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE
    - comparison_operator:
        raw_comparison_operator: '='
    - warehouse_size: "'XSMALL'"
    - keyword: COPY
    - keyword: GRANTS
    - parameter: COMMENT
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: "'Hello world'"
    - keyword: AFTER
    - object_reference:
        identifier: dependency_task
    - keyword: AS
    - statement:
        insert_statement:
        - keyword: INSERT
        - keyword: INTO
        - table_reference:
            identifier: mytable
        - bracketed:
            start_bracket: (
            column_reference:
              identifier: ts
            end_bracket: )
        - values_clause:
            keyword: VALUES
            bracketed:
              start_bracket: (
              expression:
                literal: '1'
              end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - keyword: TASK
    - object_reference:
        identifier: t1
    - keyword: AS
    - statement:
        insert_statement:
        - keyword: INSERT
        - keyword: INTO
        - table_reference:
            identifier: mytable
        - bracketed:
            start_bracket: (
            column_reference:
              identifier: ts
            end_bracket: )
        - values_clause:
            keyword: VALUES
            bracketed:
              start_bracket: (
              expression:
                literal: '1'
              end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: TASK
    - object_reference:
        identifier: insert_session
    - keyword: WAREHOUSE
    - comparison_operator:
        raw_comparison_operator: '='
    - object_reference:
        identifier: eng_wh
    - keyword: SCHEDULE
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: "'USING CRON 45 6 * * * UTC'"
    - keyword: AS
    - statement:
        insert_statement:
        - keyword: INSERT
        - keyword: INTO
        - table_reference:
          - identifier: sch
          - dot: .
          - identifier: s_session
        - select_statement:
            select_clause:
            - keyword: SELECT
            - select_clause_element:
                wildcard_expression:
                  wildcard_identifier:
                    star: '*'
            - comma: ','
            - select_clause_element:
                function:
                  function_name:
                    function_name_identifier: sum
                  bracketed:
                    start_bracket: (
                    expression:
                      column_reference:
                        identifier: break
                    end_bracket: )
                  over_clause:
                    keyword: OVER
                    bracketed:
                      start_bracket: (
                      window_specification:
                        partitionby_clause:
                        - keyword: PARTITION
                        - keyword: BY
                        - expression:
                            column_reference:
                              identifier: serial
                        orderby_clause:
                        - keyword: ORDER
                        - keyword: BY
                        - column_reference:
                            identifier: datetime
                      end_bracket: )
                alias_expression:
                  keyword: AS
                  identifier: session_id
            from_clause:
              keyword: FROM
              from_expression:
                from_expression_element:
                  table_expression:
                    bracketed:
                      start_bracket: (
                      select_statement:
                        select_clause:
                          keyword: SELECT
                          select_clause_element:
                            wildcard_expression:
                              wildcard_identifier:
                                star: '*'
                        from_clause:
                          keyword: FROM
                          from_expression:
                            from_expression_element:
                              table_expression:
                                table_reference:
                                  identifier: base_table
                      end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: TASK
    - object_reference:
        identifier: update_session
    - keyword: WAREHOUSE
    - comparison_operator:
        raw_comparison_operator: '='
    - object_reference:
        identifier: eng_wh
    - keyword: AFTER
    - object_reference:
        identifier: insert_session
    - keyword: AS
    - statement:
        update_statement:
          keyword: UPDATE
          table_reference:
          - identifier: sch
          - dot: .
          - identifier: s_session
          set_clause_list:
          - keyword: SET
          - set_clause:
            - column_reference:
                identifier: lag_datetime
            - comparison_operator:
                raw_comparison_operator: '='
            - column_reference:
              - identifier: v
              - dot: .
              - identifier: lag_datetime
          - comma: ','
          - set_clause:
            - column_reference:
                identifier: row_number
            - comparison_operator:
                raw_comparison_operator: '='
            - column_reference:
              - identifier: v
              - dot: .
              - identifier: row_number
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  bracketed:
                    start_bracket: (
                    select_statement:
                      select_clause:
                      - keyword: SELECT
                      - select_clause_element:
                          wildcard_expression:
                            wildcard_identifier:
                              star: '*'
                      - comma: ','
                      - select_clause_element:
                          expression:
                            bracketed:
                              start_bracket: (
                              expression:
                                function:
                                  function_name:
                                    function_name_identifier: sum
                                  bracketed:
                                    start_bracket: (
                                    expression:
                                      column_reference:
                                        identifier: break
                                    end_bracket: )
                                  over_clause:
                                    keyword: OVER
                                    bracketed:
                                      start_bracket: (
                                      window_specification:
                                        partitionby_clause:
                                        - keyword: PARTITION
                                        - keyword: BY
                                        - expression:
                                            column_reference:
                                              identifier: serial
                                        orderby_clause:
                                        - keyword: ORDER
                                        - keyword: BY
                                        - column_reference:
                                            identifier: datetime
                                      end_bracket: )
                              end_bracket: )
                          alias_expression:
                            keyword: AS
                            identifier: session_id
                      from_clause:
                        keyword: FROM
                        from_expression:
                          from_expression_element:
                            table_expression:
                              bracketed:
                                start_bracket: (
                                select_statement:
                                  select_clause:
                                    keyword: SELECT
                                    select_clause_element:
                                      wildcard_expression:
                                        wildcard_identifier:
                                          star: '*'
                                  from_clause:
                                    keyword: FROM
                                    from_expression:
                                      from_expression_element:
                                        table_expression:
                                          table_reference:
                                            identifier: derived_table
                                end_bracket: )
                      orderby_clause:
                      - keyword: ORDER
                      - keyword: BY
                      - column_reference:
                          identifier: serial
                      - comma: ','
                      - column_reference:
                          identifier: datetime
                    end_bracket: )
                alias_expression:
                  keyword: AS
                  identifier: v
          where_clause:
            keyword: WHERE
            expression:
            - column_reference:
              - identifier: sch
              - dot: .
              - identifier: s_session
              - dot: .
              - identifier: event_id
            - comparison_operator:
                raw_comparison_operator: '='
            - column_reference:
              - identifier: v
              - dot: .
              - identifier: event_id
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: TASK
    - object_reference:
      - identifier: sch
      - dot: .
      - identifier: truncate_session
    - keyword: WAREHOUSE
    - comparison_operator:
        raw_comparison_operator: '='
    - object_reference:
        identifier: eng_wh
    - keyword: AFTER
    - object_reference:
      - identifier: sch
      - dot: .
      - identifier: update_session
    - keyword: AS
    - statement:
        call_segment:
          keyword: CALL
          function:
            function_name:
              identifier: sch
              dot: .
              function_name_identifier: session_agg_insert
            bracketed:
              start_bracket: (
              end_bracket: )
- statement_terminator: ;
- statement:
    create_task_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: TASK
    - object_reference:
        identifier: insert__agg
    - keyword: WAREHOUSE
    - comparison_operator:
        raw_comparison_operator: '='
    - object_reference:
        identifier: eng_wh
    - keyword: SCHEDULE
    - comparison_operator:
        raw_comparison_operator: '='
    - literal: "'USING CRON 15 7 2 * * UTC'"
    - keyword: AS
    - statement:
        call_segment:
          keyword: CALL
          function:
            function_name:
              function_name_identifier: auto_device_insert
            bracketed:
              start_bracket: (
              end_bracket: )
- statement_terminator: ;
