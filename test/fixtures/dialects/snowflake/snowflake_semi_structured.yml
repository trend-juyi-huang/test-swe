# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 9836b4842aa75048c7da6d4d88487fed192e81f0483348796f52a031c66827d2
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: ticket_id
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
              identifier: value
            snowflake_semi_structured_expression:
              colon: ':'
              semi_structured_element: value
          alias_expression:
            keyword: AS
            identifier: uncasted
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
              identifier: value
            snowflake_semi_structured_expression:
              colon: ':'
              semi_structured_element: id
            cast_expression:
              casting_operator: '::'
              data_type:
                data_type_identifier: bigint
          alias_expression:
            keyword: AS
            identifier: field_id
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
              identifier: value
            snowflake_semi_structured_expression:
              colon: ':'
              semi_structured_element: value
            cast_expression:
              casting_operator: '::'
              data_type:
                data_type_identifier: STRING
          alias_expression:
            keyword: AS
            identifier: field_val
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
              identifier: value
            snowflake_semi_structured_expression:
            - colon: ':'
            - semi_structured_element: thing
            - array_accessor:
                start_square_bracket: '['
                literal: '4'
                end_square_bracket: ']'
            - dot: .
            - semi_structured_element: foo
          alias_expression:
            keyword: AS
            identifier: another_val
      - comma: ','
      - select_clause_element:
          expression:
            column_reference:
              identifier: value
            snowflake_semi_structured_expression:
            - colon: ':'
            - semi_structured_element: thing
            - array_accessor:
                start_square_bracket: '['
                literal: '4'
                end_square_bracket: ']'
            - dot: .
            - semi_structured_element: bar
            - dot: .
            - semi_structured_element: baz
            - array_accessor:
                start_square_bracket: '['
                literal: '0'
                end_square_bracket: ']'
            - dot: .
            - semi_structured_element: foo
            cast_expression:
              casting_operator: '::'
              data_type:
                data_type_identifier: bigint
          alias_expression:
            keyword: AS
            identifier: another_val
      from_clause:
      - keyword: FROM
      - from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: raw_tickets
      - comma: ','
      - from_expression:
          from_expression_element:
            keyword: lateral
            table_expression:
              function:
                function_name:
                  function_name_identifier: flatten
                bracketed:
                  start_bracket: (
                  snowflake_keyword_expression:
                    parameter: INPUT
                    parameter_assigner: =>
                    column_reference:
                      identifier: custom_fields
                  end_bracket: )
