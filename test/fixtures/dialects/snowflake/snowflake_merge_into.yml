# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d07738df29bf8bdf14d50d018e4d4109a741356e621c628c6161f181165ba097
file:
- statement:
    alter_table_statement:
    - keyword: ALTER
    - keyword: TABLE
    - table_reference:
      - identifier: xxxx
      - dot: .
      - identifier: example_table
    - alter_table_table_column_action:
      - keyword: MODIFY
      - keyword: COLUMN
      - column_reference:
          identifier: employeeCode
      - keyword: SET
      - keyword: MASKING
      - keyword: POLICY
      - function_name_identifier: example_MASKING_POLICY
- statement_terminator: ;
- statement:
    merge_statement:
    - keyword: merge
    - keyword: into
    - table_reference:
        identifier: target_table
    - keyword: using
    - table_reference:
        identifier: source_table
    - join_on_condition:
        keyword: 'on'
        expression:
        - column_reference:
          - identifier: target_table
          - dot: .
          - identifier: id
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - identifier: source_table
          - dot: .
          - identifier: id
    - merge_when_matched_clause:
      - keyword: when
      - keyword: matched
      - keyword: then
      - merge_update_clause:
          keyword: update
          set_clause_list:
            keyword: set
            set_clause:
            - column_reference:
              - identifier: target_table
              - dot: .
              - identifier: description
            - comparison_operator:
                raw_comparison_operator: '='
            - column_reference:
              - identifier: source_table
              - dot: .
              - identifier: description
- statement_terminator: ;
- statement:
    merge_statement:
    - keyword: merge
    - keyword: into
    - table_reference:
        identifier: t1
    - keyword: using
    - table_reference:
        identifier: t2
    - join_on_condition:
        keyword: 'on'
        expression:
        - column_reference:
          - identifier: t1
          - dot: .
          - identifier: t1key
        - comparison_operator:
            raw_comparison_operator: '='
        - column_reference:
          - identifier: t2
          - dot: .
          - identifier: t2key
    - merge_when_matched_clause:
      - keyword: when
      - keyword: matched
      - binary_operator: and
      - expression:
          column_reference:
          - identifier: t2
          - dot: .
          - identifier: marked
          comparison_operator:
            raw_comparison_operator: '='
          literal: '1'
      - keyword: then
      - merge_delete_clause:
          keyword: delete
