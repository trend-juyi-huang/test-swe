# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 58b25106d8887ebd4a10cae8483c0907e6c1a7ed10e9f52812748cd41eb63b04
file:
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - view_reference:
        identifier: my_view
    - keyword: as
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              column_reference:
                identifier: x
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: t
        end_bracket: )
    - keyword: COMMENT
    - keyword: IS
    - literal: "'nice view'"
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - view_reference:
        identifier: my_view
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: col1
        end_bracket: )
    - keyword: as
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              column_reference:
                identifier: x
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: t
        end_bracket: )
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: FORCE
    - keyword: VIEW
    - view_reference:
        identifier: my_view
    - keyword: as
    - select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            column_reference:
              identifier: y
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: t
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - binary_operator: OR
    - keyword: REPLACE
    - keyword: VIEW
    - view_reference:
        identifier: my_view
    - bracketed:
      - start_bracket: (
      - column_reference:
          identifier: col_1
      - keyword: COMMENT
      - keyword: IS
      - literal: "'something important'"
      - comma: ','
      - column_reference:
          identifier: col2
      - end_bracket: )
    - keyword: as
    - select_statement:
        select_clause:
          keyword: select
          select_clause_element:
            function:
              function_name:
                function_name_identifier: max
              bracketed:
                start_bracket: (
                expression:
                  column_reference:
                    identifier: y
                end_bracket: )
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: t
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - view_reference:
      - identifier: schem
      - dot: .
      - identifier: few
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: col1
        end_bracket: )
    - keyword: as
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              column_reference:
                identifier: x
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: t
        end_bracket: )
- statement_terminator: ;
- statement:
    create_view_statement:
    - keyword: CREATE
    - keyword: VIEW
    - view_reference:
      - identifier: schem
      - dot: .
      - identifier: few
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: col1
        end_bracket: )
    - keyword: as
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              column_reference:
                identifier: x
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  table_reference:
                    identifier: t
        end_bracket: )
- statement_terminator: ;
