# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 0bc4b039ebf0a388fe704b591548f408c116472b58410b75ba40edab65c65aa8
file:
  batch:
  - statement:
      select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              identifier: DeptID
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: DeptName
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: DeptMgrID
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: EmpID
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: EmpLastName
        - comma: ','
        - select_clause_element:
            column_reference:
              identifier: EmpSalary
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: Departments
              alias_expression:
                identifier: d
            join_clause:
            - keyword: CROSS
            - keyword: APPLY
            - from_expression_element:
                table_expression:
                  function:
                    function_name:
                      identifier: dbo
                      dot: .
                      function_name_identifier: GetReports
                    bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                        - identifier: d
                        - dot: .
                        - identifier: DeptMgrID
                      end_bracket: )
          statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: Department
              alias_expression:
                identifier: D
            join_clause:
            - keyword: OUTER
            - keyword: APPLY
            - from_expression_element:
                table_expression:
                  function:
                    function_name:
                      identifier: dbo
                      dot: .
                      function_name_identifier: fn_GetAllEmployeeOfADepartment
                    bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                        - identifier: D
                        - dot: .
                        - identifier: DepartmentID
                      end_bracket: )
          statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
        - keyword: select
        - select_clause_element:
            column_reference:
            - identifier: s
            - dot: .
            - identifier: column_id
        - comma: ','
        - select_clause_element:
            column_reference:
            - identifier: sp
            - dot: .
            - identifier: value
        from_clause:
          keyword: from
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  identifier: table1
              alias_expression:
                keyword: as
                identifier: s
            join_clause:
            - keyword: cross
            - keyword: apply
            - from_expression_element:
                table_expression:
                  function:
                    function_name:
                      function_name_identifier: string_split
                    bracketed:
                    - start_bracket: (
                    - expression:
                        function:
                          function_name:
                            function_name_identifier: replace
                          bracketed:
                          - start_bracket: (
                          - expression:
                              column_reference:
                              - identifier: s
                              - dot: .
                              - identifier: some_path
                          - comma: ','
                          - expression:
                              literal: "'->'"
                          - comma: ','
                          - expression:
                              literal: "'{'"
                          - end_bracket: )
                    - comma: ','
                    - expression:
                        literal: "'{'"
                    - end_bracket: )
                alias_expression:
                  keyword: as
                  identifier: sp
          statement_terminator: ;
