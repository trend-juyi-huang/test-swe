# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: f79d6da4d21dfad60142d36bc242c250d86e4d5200f2fbbbcc45ded32f446003
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          bare_function: current_date
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          bare_function: sysdate
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: TRUNC
            bracketed:
              start_bracket: (
              expression:
                bare_function: sysdate
              end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          column_reference:
            identifier: salesid
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: pricepaid
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: TRUNC
            bracketed:
              start_bracket: (
              expression:
                column_reference:
                  identifier: saletime
              end_bracket: )
          alias_expression:
            keyword: AS
            identifier: saletime
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: TRUNC
            bracketed:
              start_bracket: (
              expression:
                bare_function: sysdate
              end_bracket: )
          alias_expression:
            keyword: AS
            identifier: now
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: sales
      where_clause:
        keyword: WHERE
        expression:
        - column_reference:
            identifier: saletime
        - keyword: BETWEEN
        - function:
            function_name:
              function_name_identifier: TRUNC
            bracketed:
              start_bracket: (
              expression:
                bare_function: sysdate
              end_bracket: )
        - binary_operator: '-'
        - literal: '120'
        - binary_operator: AND
        - function:
            function_name:
              function_name_identifier: TRUNC
            bracketed:
              start_bracket: (
              expression:
                bare_function: sysdate
              end_bracket: )
      orderby_clause:
      - keyword: ORDER
      - keyword: BY
      - column_reference:
          identifier: saletime
      - keyword: ASC
- statement_terminator: ;
