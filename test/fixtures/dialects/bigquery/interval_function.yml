# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: a1c897485313021120f6461b6e1d7990e7766b8a1820cde7ab52a595b4affe1b
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: TIMESTAMP_TRUNC
            bracketed:
              start_bracket: (
              expression:
                function:
                  function_name:
                    function_name_identifier: TIMESTAMP_ADD
                  bracketed:
                  - start_bracket: (
                  - expression:
                      column_reference:
                      - identifier: session_start
                      - dot: .
                      - identifier: eventTimestamp
                  - comma: ','
                  - expression:
                      interval_expression:
                        keyword: INTERVAL
                        expression:
                          function:
                            function_name:
                              function_name_identifier: cast
                            bracketed:
                              start_bracket: (
                              expression:
                                function:
                                  function_name:
                                    function_name_identifier: TIMESTAMP_DIFF
                                  bracketed:
                                  - start_bracket: (
                                  - expression:
                                      column_reference:
                                      - identifier: session_end
                                      - dot: .
                                      - identifier: eventTimestamp
                                  - comma: ','
                                  - expression:
                                      column_reference:
                                      - identifier: session_start
                                      - dot: .
                                      - identifier: eventTimestamp
                                  - comma: ','
                                  - date_part: SECOND
                                  - end_bracket: )
                                binary_operator: /
                                literal: '2'
                              keyword: AS
                              data_type:
                                data_type_identifier: int64
                              end_bracket: )
                        date_part: second
                  - end_bracket: )
              comma: ','
              date_part: HOUR
              end_bracket: )
          alias_expression:
            keyword: AS
            identifier: avgAtHour
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: TIME_ADD
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  identifier: time1
            - comma: ','
            - expression:
                interval_expression:
                  keyword: INTERVAL
                  expression:
                    literal: '10'
                  date_part: MINUTE
            - end_bracket: )
          alias_expression:
            keyword: AS
            identifier: after
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: DATE_SUB
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  identifier: time2
            - comma: ','
            - expression:
                interval_expression:
                  keyword: INTERVAL
                  expression:
                    literal: '5'
                  date_part: YEAR
            - end_bracket: )
          alias_expression:
            keyword: AS
            identifier: before
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: dummy
  statement_terminator: ;
