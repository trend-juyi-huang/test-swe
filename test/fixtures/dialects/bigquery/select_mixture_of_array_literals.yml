# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 04e1c92046585ea1c067f6c5bfa3c7425fb9518690fb50b45d97c6dadb776d33
file:
  statement:
    select_statement:
      select_clause:
      - keyword: SELECT
      - select_clause_element:
          expression:
            array_literal:
              start_square_bracket: '['
              end_square_bracket: ']'
      - comma: ','
      - select_clause_element:
          expression:
            array_literal:
              start_square_bracket: '['
              expression:
                literal: 'false'
              end_square_bracket: ']'
      - comma: ','
      - select_clause_element:
          expression:
            keyword: ARRAY
            start_angle_bracket: <
            data_type_identifier: BOOLEAN
            end_angle_bracket: '>'
            array_literal:
              start_square_bracket: '['
              expression:
                literal: 'false'
              end_square_bracket: ']'
      - comma: ','
      - select_clause_element:
          expression:
            array_literal:
              start_square_bracket: '['
              expression:
                literal: "'a'"
              end_square_bracket: ']'
          alias_expression:
            keyword: AS
            identifier: strcol1
      - comma: ','
      - select_clause_element:
          expression:
            keyword: ARRAY
            start_angle_bracket: <
            data_type_identifier: string
            end_angle_bracket: '>'
            array_literal:
              start_square_bracket: '['
              expression:
                literal: "'b'"
              end_square_bracket: ']'
          alias_expression:
            keyword: AS
            identifier: strcol2
      - comma: ','
      - select_clause_element:
          expression:
            array_literal:
              start_square_bracket: '['
              expression:
                literal: '1.0'
              end_square_bracket: ']'
          alias_expression:
            keyword: AS
            identifier: numcol1
      - comma: ','
      - select_clause_element:
          expression:
            keyword: ARRAY
            start_angle_bracket: <
            data_type_identifier: NUMERIC
            end_angle_bracket: '>'
            array_literal:
              start_square_bracket: '['
              expression:
                literal: '1.4'
              end_square_bracket: ']'
          alias_expression:
            keyword: AS
            identifier: numcol2
      - comma: ','
      - select_clause_element:
          expression:
            array_literal:
              start_square_bracket: '['
              typeless_struct:
                keyword: STRUCT
                bracketed:
                - start_bracket: (
                - literal: '"Rudisha"'
                - alias_expression:
                    keyword: AS
                    identifier: name
                - comma: ','
                - expression:
                    array_literal:
                    - start_square_bracket: '['
                    - expression:
                        literal: '23.4'
                    - comma: ','
                    - expression:
                        literal: '26.3'
                    - comma: ','
                    - expression:
                        literal: '26.4'
                    - comma: ','
                    - expression:
                        literal: '26.1'
                    - end_square_bracket: ']'
                - alias_expression:
                    keyword: AS
                    identifier: splits
                - end_bracket: )
              end_square_bracket: ']'
          alias_expression:
            keyword: AS
            identifier: struct1
