# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: b0a15006dcb0e8923a1437a02e82b14d9eb3753c6c9be8d835a2c00652a14e22
file:
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          typeless_struct:
            keyword: STRUCT
            bracketed:
              start_bracket: (
              typeless_struct:
                keyword: STRUCT
                bracketed:
                  start_bracket: (
                  literal: '1'
                  alias_expression:
                    keyword: AS
                    identifier: b
                  end_bracket: )
              alias_expression:
                keyword: AS
                identifier: a
              end_bracket: )
          alias_expression:
            keyword: AS
            identifier: foo
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: ARRAY_AGG
            bracketed:
              start_bracket: (
              typeless_struct:
                keyword: STRUCT
                bracketed:
                - start_bracket: (
                - column_reference:
                    identifier: a
                - alias_expression:
                    keyword: AS
                    identifier: a
                - comma: ','
                - column_reference:
                    identifier: b
                - alias_expression:
                    keyword: AS
                    identifier: b
                - end_bracket: )
              end_bracket: )
      from_clause:
        keyword: FROM
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: foo
- statement_terminator: ;
