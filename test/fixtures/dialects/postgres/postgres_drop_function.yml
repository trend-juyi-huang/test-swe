# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: b43b58e3cc8010a31884e461bc505592c46994abf42a3d3057833a6c802a2fd8
file:
- statement:
    drop_function_statement:
    - keyword: DROP
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: sqrt
    - base:
        bracketed:
          start_bracket: (
          data_type:
            keyword: integer
          end_bracket: )
- statement_terminator: ;
- statement:
    drop_function_statement:
    - keyword: DROP
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: sqrt
    - base:
        bracketed:
          start_bracket: (
          data_type:
            keyword: integer
          end_bracket: )
    - comma: ','
    - function_name:
        function_name_identifier: sqrt
    - base:
        bracketed:
          start_bracket: (
          data_type:
            keyword: bigint
          end_bracket: )
- statement_terminator: ;
- statement:
    drop_function_statement:
    - keyword: DROP
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: update_employee_salaries
- statement_terminator: ;
- statement:
    drop_function_statement:
    - keyword: DROP
    - keyword: FUNCTION
    - function_name:
        function_name_identifier: update_employee_salaries
    - base:
        bracketed:
          start_bracket: (
          end_bracket: )
- statement_terminator: ;
- statement:
    drop_function_statement:
    - keyword: DROP
    - keyword: FUNCTION
    - keyword: IF
    - keyword: EXISTS
    - function_name:
        function_name_identifier: foo
    - base:
        bracketed:
        - start_bracket: (
        - keyword: IN
        - parameter: my_var
        - data_type:
            keyword: integer
        - comma: ','
        - keyword: VARIADIC
        - parameter: my_var_2
        - data_type:
            keyword: text
        - end_bracket: )
- statement_terminator: ;
