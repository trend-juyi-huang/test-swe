# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: e6e0c2093e5b3fc2b880c6ee1dd1a12ce9f2171e9bd4d63772633233e17987d1
file:
- statement:
    select_statement:
      select_clause:
      - keyword: select
      - select_clause_element:
          column_reference:
            identifier: venuestate
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: venueseats
      - comma: ','
      - select_clause_element:
          column_reference:
            identifier: venuename
      - comma: ','
      - select_clause_element:
          function:
            function_name:
              function_name_identifier: first_value
            bracketed:
            - start_bracket: (
            - expression:
                column_reference:
                  identifier: venuename
            - keyword: ignore
            - keyword: nulls
            - end_bracket: )
            over_clause:
              keyword: over
              bracketed:
                start_bracket: (
                window_specification:
                  partitionby_clause:
                  - keyword: partition
                  - keyword: by
                  - expression:
                      column_reference:
                        identifier: venuestate
                  orderby_clause:
                  - keyword: order
                  - keyword: by
                  - column_reference:
                      identifier: venueseats
                  - keyword: desc
                  frame_clause:
                  - keyword: rows
                  - keyword: between
                  - keyword: unbounded
                  - keyword: preceding
                  - binary_operator: and
                  - keyword: unbounded
                  - keyword: following
                end_bracket: )
          alias_expression:
            keyword: as
            identifier: col_name
      from_clause:
        keyword: from
        from_expression:
          from_expression_element:
            table_expression:
              table_reference:
                identifier: table_name
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: rank
            bracketed:
              start_bracket: (
              end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      identifier: my_column
                  frame_clause:
                  - keyword: RANGE
                  - keyword: BETWEEN
                  - literal: '12'
                  - keyword: FOLLOWING
                  - binary_operator: AND
                  - keyword: CURRENT
                  - keyword: ROW
                  - keyword: EXCLUDE
                  - keyword: 'NO'
                  - keyword: OTHERS
                end_bracket: )
- statement_terminator: ;
- statement:
    select_statement:
      select_clause:
        keyword: SELECT
        select_clause_element:
          function:
            function_name:
              function_name_identifier: rank
            bracketed:
              start_bracket: (
              end_bracket: )
            over_clause:
              keyword: OVER
              bracketed:
                start_bracket: (
                window_specification:
                  orderby_clause:
                  - keyword: ORDER
                  - keyword: BY
                  - column_reference:
                      identifier: my_column
                  frame_clause:
                  - keyword: GROUPS
                  - keyword: UNBOUNDED
                  - keyword: PRECEDING
                  - keyword: EXCLUDE
                  - keyword: GROUP
                end_bracket: )
- statement_terminator: ;
